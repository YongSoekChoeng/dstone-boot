net.dstone.common.utils.DateUtil.stopWatchStart("01.소스분석");try {	/*	System.out.println(net.dstone.common.tools.analyzer.util.DbGen.DDL.ORACLE);	*/		/*	String DBID = "DBID_1";	String TABLE_NAME = "TB_FUNC";	String str = net.dstone.common.utils.DbUtil.SqlGen.getInsertSql(DBID, TABLE_NAME, "JDBC");	System.out.println(str);	*/			String rootPath = "";	//rootPath = "D:/Swap/참조소스/AIB/src/main";	rootPath = "D:/AppHome/framework/dstone/src/main";	String classRootPath = rootPath + "/" + "java";	String webRootPath = rootPath + "/" + "webapp";	String[] includePackageRoot = {"net.dstone.sample.dept"};	String[] excludePackagePattern = {".vo.", ".vo"};	String queryRootPath = rootPath + "/" + "java";	net.dstone.common.tools.analyzer.AppAnalyzer appAnalyzer = net.dstone.common.tools.analyzer.AppAnalyzer.getInstance(		rootPath 					/* 프로젝트 루트 디렉토리 */		, classRootPath				/* 클래스 루트 디렉토리 */		, webRootPath				/* 웹 루트 디렉토리 */		, includePackageRoot		/* 분석패키지루트 목록(분석대상 패키지 루트. 해당 패키지이하의 모듈만 분석한다.) */		, excludePackagePattern		/* 분석제외패키지패턴 목록(분석제외대상 패키지 패턴. 해당 패키지명이 속하는 패키지는 분석제외한다.) */		, queryRootPath				/* 쿼리 루트 디렉토리 */	);	String subPath = "";	appAnalyzer.analyze(subPath);			/*	String conts = net.dstone.common.utils.FileUtil.readFile("D:/AppHome/framework/dstone/src/main/java/net/dstone/sample/dept/DeptController.java");	System.out.println(		net.dstone.common.tools.analyzer.util.ParseUtil.getMtdListFromJava(conts)	);	*/	}catch(Exception e){	e.printStackTrace();}finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("01.소스분석");}/*String inputStr = "private ACT2010BS act2010bs =";String startStr = "ACT2010BS";String[] div = {" ", ";", "="};System.out.println( "alias===>>[" + net.dstone.common.utils.StringUtil.nextWord(inputStr, startStr, div) + "]" );String functionId = "aaa.bb.ccc.Class1.selectTest";String[] words = net.dstone.common.utils.StringUtil.toStrArray(functionId, ".");if(words.length > 2){	String classId = words[ words.length -2 ];	System.out.println("classId:" + classId);	String packageId = functionId.substring(0, functionId.indexOf(classId+".")-1);	System.out.println("packageId:" + packageId);}			*/