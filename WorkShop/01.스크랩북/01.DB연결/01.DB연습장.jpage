
String DBID = "DBID_0";
net.dstone.common.utils.DbUtil db = null;
net.dstone.common.utils.DataSet ds = new net.dstone.common.utils.DataSet();

StringBuffer sql = new StringBuffer();
String TABLE_NAME = "TB_METRIX";
net.dstone.common.utils.DateUtil.stopWatchStart("연습장");
try {
	sql.append("SELECT ").append("\n"); 
	sql.append("	* ").append("\n");
	sql.append("FROM  ").append("\n");
	sql.append("	" + TABLE_NAME + "  ").append("\n");
	sql.append("WHERE 1=1 ").append("\n");	sql.append("LIMIT 1 ").append("\n");	
	db = new net.dstone.common.utils.DbUtil(DBID);
	db.getConnection();
	db.setQuery(sql.toString());
		String sqlStr = net.dstone.common.utils.FileUtil.readFile("C:\\WorkShop\\C\\Temp\\연습장.rb");	db.setQuery(sqlStr);		ds.buildFromResultSet(db.select(), "");		//ds.checkData();
		StringBuffer buff = new StringBuffer();	String[] cols = db.getColumnNames();	for(String col : cols){			}	System.out.println(db.getQuery());	
}catch(Exception e){
	System.out.println(db.getQuery());
	e.printStackTrace();
}finally{
	if(db != null){
		db.release();
	}	net.dstone.common.utils.DateUtil.stopWatchEnd("연습장");
}