net.dstone.common.utils.DateUtil.stopWatchStart("03.테이블추출");java.util.ArrayList<String> tblList = new java.util.ArrayList<String>();String DBID = "DBID_0";net.dstone.common.utils.DbUtil db = null;net.dstone.common.utils.DataSet ds = new net.dstone.common.utils.DataSet();StringBuffer sql = new StringBuffer();try {	sql.append("SELECT DISTINCT ").append("\n"); 	sql.append("    A.TABLE_NAME AS TABLE_ID ").append("\n"); 	sql.append("    , A.COMMENTS AS TABLE_NAME ").append("\n"); 	sql.append("FROM ").append("\n"); 	sql.append("    USER_TAB_COMMENTS A ").append("\n"); 		db = new net.dstone.common.utils.DbUtil(DBID);	db.getConnection();	db.setQuery(sql.toString());		ds.buildFromResultSet(db.select(), "TBL_LIST");		//ds.checkData();		for(int i=0; i<ds.getDataSetRowCount("TBL_LIST"); i++){		tblList.add(ds.getDataSet("TBL_LIST", i).getDatum("TABLE_ID"));	}	}catch(Exception e){	System.out.println(db.getQuery());	e.printStackTrace();}finally{	if(db != null){		db.release();	}}try {	String filePath = "C:/WorkShop/C/Temp/연습장.rb";	String fileConts = net.dstone.common.utils.FileUtil.readFile(filePath);		fileConts = net.dstone.common.utils.SqlUtil.removeCommentsFromSql(fileConts);		//System.out.println(fileConts);			java.util.ArrayList<String> list = null;		list = (java.util.ArrayList<String>)net.dstone.common.utils.SqlUtil.getTableNamesWithTblList(fileConts, tblList);		StringBuffer buff = new StringBuffer();	for(String item : list){		if( buff.length() > 0 ){			buff.append(", ");		}		buff.append(item);	}	System.out.println(buff);} catch (Exception e) {	e.printStackTrace();}finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("03.테이블추출");}