/*****************************************************//*****************************************************/net.dstone.common.utils.DateUtil.stopWatchStart("00.연습장");try {		/*	String xmlFile = "D:/Temp/TestSql.xml";	StringBuffer buff = new StringBuffer();	String[] lines = net.dstone.common.utils.FileUtil.readFileByLines(xmlFile);	for(String line : lines){		buff.append("INSERT_TB_METRIX.append(\"").append(line).append("\").append(\"\\n\");").append("\n");	}	System.out.println(buff);	*/			String path = "D:/Swap/참조소스/BmsWorks/src/gov/bms/srv/dao/BmsSrvCutDAO.java";		/*	java.util.List<java.util.Map<String, String>> result = null;	result = net.dstone.common.tools.analyzer.util.ParseUtil.getMtdListFromJava( net.dstone.common.utils.FileUtil.readFile(path, "EUC-KR"));		for( java.util.Map<String, String> mtd : result ){		System.out.println("||========================================================================||");		System.out.println(mtd);		System.out.println("||========================================================================||\n");	}	*/			com.github.javaparser.ast.CompilationUnit cu = com.github.javaparser.StaticJavaParser.parse(new java.io.File(path));	java.util.List<com.github.javaparser.ast.body.FieldDeclaration> fieldDeclarationList = cu.findAll(com.github.javaparser.ast.body.FieldDeclaration.class);	System.out.println("||========================================================================||");	for(com.github.javaparser.ast.body.FieldDeclaration fieldDec : fieldDeclarationList) {		//fieldDec.		System.out.println("fieldDec:" + fieldDec);	}	System.out.println("||========================================================================||");	System.out.println("");	System.out.println("||========================================================================||");	java.util.List<com.github.javaparser.ast.body.MethodDeclaration> methodDeclarationList = cu.findAll(com.github.javaparser.ast.body.MethodDeclaration.class);	for(com.github.javaparser.ast.body.MethodDeclaration methodDec : methodDeclarationList) {		System.out.println("------" + methodDec.getNameAsString() + " Start ------");		java.util.List<com.github.javaparser.ast.body.VariableDeclarator> methodVariableDeclaratorList = methodDec.findAll(com.github.javaparser.ast.body.VariableDeclarator.class);        for (com.github.javaparser.ast.body.VariableDeclarator variable : methodVariableDeclaratorList) {        	        	System.out.println( "variable[" + variable.getNameAsString() + "] getType():" + variable.getType().asString());        	if( variable.getType().asString().endsWith("PreparedStatement") ){        		        	}        }        System.out.println("------" + methodDec.getNameAsString() + " End ------");        		//System.out.println("methodDec:" + methodDec);		String mtdBody = methodDec.getBody().get().toString();		String[] div = {")"};		String keyword = ".prepareStatement(";		String mParam = "";		if(mtdBody.indexOf(keyword) > -1){			mParam = net.dstone.common.utils.StringUtil.nextWord(mtdBody, keyword, div);			//System.out.println("mParam:" + mParam);		}	}	System.out.println("||========================================================================||");} catch (Exception e) {	e.printStackTrace();}finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("00.연습장");}