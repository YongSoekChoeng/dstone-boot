/*****************************************************//*****************************************************/net.dstone.common.utils.DateUtil.stopWatchStart("00.연습장");try {		/*	String xmlFile = "D:/Temp/TestSql.xml";	StringBuffer buff = new StringBuffer();	String[] lines = net.dstone.common.utils.FileUtil.readFileByLines(xmlFile);	for(String line : lines){		buff.append("INSERT_TB_METRIX.append(\"").append(line).append("\").append(\"\\n\");").append("\n");	}	System.out.println(buff);	*/		String sql = "";	/*	String queryFile = "D:/Temp/TestSql.xml";	String nodeExp = "/sqlMap/select[@id='test']";	*/	String queryFile = "D:/Swap/참조소스/동부화재/AppHome/WorkShop/src/com/lgcns/ikep4/miplatform/ica/dao/impl/maps/oracle/Icaa11_SqlMap.xml";	String nodeExp = "/sqlMap/select[@id='listIcaa1100Ormm']";		net.dstone.common.utils.XmlUtil xml = net.dstone.common.utils.XmlUtil.getInstance(net.dstone.common.utils.XmlUtil.XML_SOURCE_KIND_PATH, queryFile);	sql = net.dstone.common.tools.analyzer.util.ParseUtil.removeMybatisTagFromSql(xml, nodeExp, true);		System.out.println(sql);			//String sql = net.dstone.common.utils.FileUtil.readFile(queryFile);		//System.out.println( net.dstone.common.utils.SqlUtil.getTableNamesByText(sql) );} catch (Exception e) {	e.printStackTrace();}finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("00.연습장");}