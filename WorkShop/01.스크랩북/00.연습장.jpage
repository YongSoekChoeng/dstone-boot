/*****************************************************//*****************************************************/net.dstone.common.utils.DateUtil.stopWatchStart("00.연습장");try {	// 모드-MAX:거리가 가장 먼 정보 추출, MIN:거리가 가장 가까운 정보 추출	String mode = "MIN";	// 사평역 위경도	double oriLat = 37.504398;	double oriLon = 127.015027;		java.util.Map<String, Object> row = null;	java.util.ArrayList<java.util.Map<String, Object>> list = new java.util.ArrayList<java.util.Map<String, Object>>();	list.add( (row = new java.util.HashMap<String, Object>()) );	row.put("name", "서리골공원");	row.put("tgtLat", "37.497827");	row.put("tgtLog", "127.007665");	list.add( (row = new java.util.HashMap<String, Object>()) );	row.put("name", "몽마르트공원");	row.put("tgtLat", "37.495571");	row.put("tgtLog", "127.003775");	list.add( (row = new java.util.HashMap<String, Object>()) );	row.put("name", "교대역");	row.put("tgtLat", "37.494542");	row.put("tgtLog", "127.014358");	list.add( (row = new java.util.HashMap<String, Object>()) );	row.put("name", "서초래미안상가");	row.put("tgtLat", "37.499665");	row.put("tgtLog", "127.017821");		System.out.println( net.dstone.common.utils.MathUtil.getHaversineRank(mode, oriLat, oriLon, list) );	} catch (Exception e) {	e.printStackTrace();} finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("00.연습장");}