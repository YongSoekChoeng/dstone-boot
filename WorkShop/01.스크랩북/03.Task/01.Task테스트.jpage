/*****************************************************************/int tryNum = 100;String executorServiceId = "TASK_HANDLER";/*****************************************************************/
try {	net.dstone.common.utils.DateUtil.stopWatchStart("01.Task테스트");	java.util.ArrayList<net.dstone.common.task.TaskItem> itemList = new java.util.ArrayList<net.dstone.common.task.TaskItem>();	for(int i =0; i<tryNum; i++){		net.dstone.common.task.TaskItem item = new net.dstone.common.task.TaskItem(){			@Override			public net.dstone.common.task.TaskItem doTheTask(){				try{					Thread.sleep(2*1000);					System.out.println(this.getId() + "'s Task done !!" + " - executed by Thread ID: " + this.getExecutorTheadId() );				}catch(Exception e){					e.printStackTrace();				}				return this;			}		};		item.setId("TaskItem-" + i);		itemList.add(item);	}	net.dstone.common.task.TaskHandler.getInstance().addFixedExecutorService(executorServiceId+"_FIXED", 4).doTheSyncTasks(executorServiceId+"_FIXED", itemList);	//net.dstone.common.task.TaskHandler.getInstance().addFixedExecutorService(executorServiceId+"_FIXED", 50).doTheAsyncTasks(executorServiceId+"_FIXED", itemList);	//net.dstone.common.task.TaskHandler.getInstance().addCachedExecutorService(executorServiceId+"_CACHED").doTheSyncTasks(executorServiceId+"_CACHED", itemList);	//net.dstone.common.task.TaskHandler.getInstance().addCustomExecutorService(executorServiceId+"_CUSTOM", 100, 100, 10000, 50).doTheSyncTasks(executorServiceId+"_CUSTOM", itemList);	
} catch (Exception e) {
	e.printStackTrace();
} finally {	net.dstone.common.utils.DateUtil.stopWatchEnd("01.Task테스트");}