/*****************************************************/String pdfPath = "D:/Temp/eformsign_invoice_20250401.pdf";String url = "https://tbisjeo3j9.apigw.ntruss.com/custom/v1/41046/c9708a1112a0b88b641221606fbcad24a7677dd811f3b2c8fa7e4601dc16b7c5/general";String secretKey = "WUNibm1kYVpTS09QbVVWb1pQcGNsWnhvbVJBYkhvbHg=";net.dstone.common.utils.DataSet paramDs = new net.dstone.common.utils.DataSet();net.dstone.common.utils.DataSet image = null;paramDs.setDatum("requestId", (new net.dstone.common.utils.GuidUtil()).getNewGuid());paramDs.setDatum("resultType", "string");paramDs.setDatum("version", "V1");paramDs.setDatum("timestamp", net.dstone.common.utils.DateUtil.getToDate("yyyyMMddHHmmssSSS"));net.dstone.common.utils.DataSet file = paramDs.addDataSet("files");/*****************************************************/net.dstone.common.utils.DateUtil.stopWatchStart("04.Clova Ocr");org.springframework.web.client.RestTemplate rTemplete = null;org.springframework.http.HttpHeaders headers = null;org.springframework.http.HttpEntity<String> entity = null;try {	// PDF => JPG로 변환	String pagesPath = net.dstone.common.utils.FileUtil.getFilePath(pdfPath) + "/pages";	net.dstone.common.utils.FileUtil.deleteDir(pagesPath);	net.dstone.common.utils.FileUtil.convertPdfToJpg(pdfPath, pagesPath);		// Header 세팅	headers = new org.springframework.http.HttpHeaders();	headers.setContentType( org.springframework.http.MediaType.APPLICATION_JSON_UTF8 );	headers.set("X-OCR-SECRET", secretKey);		// Body 세팅	String[] pages = net.dstone.common.utils.FileUtil.readFileListAll(pagesPath);	for(String page : pages){		image = paramDs.addDataSet("images");		image.setDatum("format", "jpg");		image.setDatum("name", net.dstone.common.utils.FileUtil.getFileName(page, false));		image.setDatum("data", net.dstone.common.utils.FileUtil.convertImageToBase64(page) );	}		entity = new org.springframework.http.HttpEntity<>(paramDs.toJson(), headers);	rTemplete = net.dstone.common.utils.RestFulUtil.getInstance().getRestTemplate();	org.springframework.http.ResponseEntity<String> response = rTemplete.exchange(url, org.springframework.http.HttpMethod.POST, entity, String.class );		System.out.println( "response.getBody()===>>" +  response.getBody() );		} catch (Exception e) {	e.printStackTrace();} finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("04.Clova Ocr");}