/*****************************************************************/int tryNum = 100;int threadNumWhenFixed = 50;/*****************************************************************/
try {	net.dstone.common.utils.DateUtil.stopWatchStart("01.Task테스트");	java.util.ArrayList<net.dstone.common.task.TaskItem> itemList = new java.util.ArrayList<net.dstone.common.task.TaskItem>();	for(int i =0; i<tryNum; i++){		net.dstone.common.task.TaskItem item = new net.dstone.common.task.TaskItem(){			@Override			public net.dstone.common.task.TaskItem doTheTask(){				System.out.println(this.getId() + "'s Task done !!");				return this;			}		};		item.setId("TaskItem-" + i);		itemList.add(item);	}	net.dstone.common.task.TaskHandler.TaskConfig conf = net.dstone.common.task.TaskHandler.getInstance().getTaskConfig();	conf.setTaskMode(net.dstone.common.task.TaskHandler.FIXED);	conf.setThreadNumWhenFixed(threadNumWhenFixed);	conf.setWaitTimeAfterShutdown(1);		net.dstone.common.task.TaskHandler.getInstance().doTheTasks(conf, itemList);	
} catch (Exception e) {
	e.printStackTrace();
} finally {	net.dstone.common.utils.DateUtil.stopWatchEnd("01.Task테스트");}