String workDir 			= "D:/Temp/sample";int threadNumWhenFixed 	= 10;int taskOccursNum 		= 100;
try {	net.dstone.common.utils.DateUtil.stopWatchStart("02.테스트파일데이터생성");	/*** 0.테스트파일데이터 생성 시작 ***/	/*	String filePath = workDir + "/split";	net.dstone.common.task.TaskHandler.TaskConfig conf = net.dstone.common.task.TaskHandler.getInstance().getTaskConfig();	conf.setTaskMode(net.dstone.common.task.TaskHandler.FIXED);	conf.setThreadNumWhenFixed(threadNumWhenFixed);	conf.setWaitTimeAfterShutdown(1);		java.util.ArrayList<net.dstone.common.task.TaskItem> workList = new java.util.ArrayList<net.dstone.common.task.TaskItem>();	for(int i =0; i<taskOccursNum; i++){		net.dstone.sample.task.TestFileDataGenTaskItem item = new net.dstone.sample.task.TestFileDataGenTaskItem();		item.setId("TEST-"+ i);		item.setProperty("date", net.dstone.common.utils.DateUtil.dayCalForStr(net.dstone.common.utils.DateUtil.getToDate("yyyyMMdd"), -1*i, 1, "yyyyMMdd"));		item.setProperty("deleteFileYn", "N");		item.setProperty("filePath", filePath);		workList.add(item);	}	workList = net.dstone.common.task.TaskHandler.getInstance().doTheTasks(conf, workList);	System.out.println(workList);	*/	/*** 0.테스트파일데이터 생성 끝 ***/	/*** 1.split에 생성된 테스트파일데이터 머지 시작 ***/	//net.dstone.common.utils.FileUtil.mergeFiles(workDir+"/split", workDir+"/merged_sample.log");	/*** 1.split에 생성된 테스트파일데이터 머지 끝 ***/	/*** 2.머지데이터 소팅 시작 ***/		net.dstone.common.utils.FileUtil.sortFile(workDir+"/merged_sample.log", workDir+"/merged_sample_sorted.log", new java.util.Comparator<String>(){        @Override        public int compare(String r1, String r2) {        	int returnNum = 0;        	if(!net.dstone.common.utils.StringUtil.isEmpty(r1)&&!net.dstone.common.utils.StringUtil.isEmpty(r2)){        		String[] r1Arr = net.dstone.common.utils.StringUtil.toStrArray(r1, "\t");        		String[] r2Arr = net.dstone.common.utils.StringUtil.toStrArray(r2, "\t");        		        		String key1 = r1Arr[1]+r1Arr[0]+r1Arr[2];        		String key2 = r2Arr[1]+r2Arr[0]+r2Arr[2];        		        		returnNum = key1.compareTo(key2);        	}           	return returnNum;        }			});		/*** 2.머지데이터 소팅 끝 ***/	/*** 3.소팅된머지데이터 분리 시작 ***/	//net.dstone.common.utils.FileUtil.splitTextFile(workDir+"/merged_sample_sorted.log", workDir+"/split-sorted", 10);	/*** 3.소팅된머지데이터 분리 끝 ***/
} catch (Exception e) {
	e.printStackTrace();
} finally {	net.dstone.common.utils.DateUtil.stopWatchEnd("02.테스트파일데이터생성");}