/*****************************************************************/int tryNum = 10;net.dstone.common.queue.QueueHandler.Config conf = net.dstone.common.queue.QueueHandler.getInstance().newConfig();conf.setQueueCheckInterval(1000);conf.setQueueFetchSizeByOne(500);conf.setExecutorServiceId("THREAD_POOL_FOR_QHANDLER");conf.setExecutorType(net.dstone.common.queue.QueueHandler.EXECUTOR_TYPE_CACHED);//conf.setExecutorType(net.dstone.common.queue.QueueHandler.EXECUTOR_TYPE_CUSTOM);//conf.setExecutorType(net.dstone.common.queue.QueueHandler.EXECUTOR_TYPE_FIXED);/*****************************************************************/net.dstone.common.utils.DateUtil.stopWatchStart("01.Queue테스트");
try {	if(net.dstone.common.queue.QueueHandler.EXECUTOR_TYPE_CUSTOM.equals(conf.getExecutorType())){		conf.setCorePoolSize(100);		conf.setMaximumPoolSize(100);		conf.setQueueCapacity(10000);		conf.setKeepAliveTime(1000);	}else if(net.dstone.common.queue.QueueHandler.EXECUTOR_TYPE_FIXED.equals(conf.getExecutorType())){		conf.setPoolSizeWhenFixed(100);	}	net.dstone.common.queue.QueueHandler.getInstance().addQueueService("QHANDLER_SERVICE_1", conf);	for(int i =0; i<tryNum; i++){				net.dstone.common.queue.QueueItem item = new net.dstone.common.queue.QueueItem(){			@Override			public void doTheJob(){				try{					Thread.sleep(1000);					System.out.println(this.getId() + "'s Job done !!");				}catch(Exception e){					e.printStackTrace();				}			}		};		item.setId("QueueItem-" + i);		net.dstone.common.queue.QueueHandler.getInstance().getQueueService("QHANDLER_SERVICE_1").addQueue(item);	}} catch (Exception e) {
	e.printStackTrace();
} finally{	net.dstone.common.utils.DateUtil.stopWatchEnd("01.Queue테스트");}